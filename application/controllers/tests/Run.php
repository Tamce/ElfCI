<?php
defined('BASEPATH') or exit('No direct script access allowed');

class Run extends CI_Controller
{
	function index()
	{
		echo 'Notice: Now unit test class uses bootstrap css in abs path as `/public/style/boostrap.min.css`.<br>';
		echo 'You can change it in `application/libraries/Unit.php` line `218`.<br>';
		echo 'You can also change the whole template in `application/libraries/Unit.php`<br>';
		echo '<b>Notice that `Memory used` is the memory usage of the php script generated by `memory_get_usage()`<br>';
		echo '`Time used` is the time from `$this->unit->start()` to `$this->unit->result() / printResult()`';
		echo '</b><hr>';
		$this->load->library('unit');
		$this->unit->start('Unit test group name(can be null)');

		$str = 'Hello World!';
		$this->unit->describe('First way to use', 'Here comes more info')->expect($str)->toBe('Hello World');

		$this->unit->describe('Simple compare', 'You can also use not to be')->expect($str)->notToBe(null);

		$this->unit->assertEqual('You can also use this way to run a test', $str, 'Hello World!', 'More info comes here now');

		$this->unit->assertUnequal('Unequal method', $str, null);

		$this->__str = $str;
		$this->unit->assert('You can use user defined functions too.', function() {
			echo 'Output in function will shows too.';
			return $this->__str == true;
		}, 'Any function call be recognized by `is_callable` can be called.<br>The function\'s output and return value are displayed as `Expected` and `Got`.');

		$this->unit->printResult();


		$this->unit->start();
		$var = 1 + 1;
		$this->unit->assertEqual('You can use `start` method to start another group of unit test.', $var, 2,
								 'You can print result in one page too.<br>You can use `result` method to get result without output it.');
		echo $this->unit->result();
	}
}
